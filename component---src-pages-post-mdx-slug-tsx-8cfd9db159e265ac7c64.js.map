{"version":3,"file":"component---src-pages-post-mdx-slug-tsx-8cfd9db159e265ac7c64.js","mappings":"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","sources":["webpack://my-blog/./node_modules/gatsby-plugin-mdx/index.js","webpack://my-blog/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://my-blog/./src/components/ProfileCard.tsx","webpack://my-blog/./src/pages/post/{mdx.slug}.tsx","webpack://my-blog/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://my-blog/./node_modules/@babel/runtime/helpers/construct.js","webpack://my-blog/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://my-blog/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://my-blog/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://my-blog/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://my-blog/./node_modules/@babel/runtime/helpers/toConsumableArray.js"],"sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","import { StaticImage } from \"gatsby-plugin-image\";\r\nimport React from \"react\";\r\nimport { EmailImage, GitHubLogoImage } from \"./Images\";\r\nimport * as styles from \"./ProfileCard.module.css\";\r\n\r\ninterface ProfileCardProps {\r\n  name: string;\r\n  description: string;\r\n  email: string;\r\n  githubUrl: string;\r\n}\r\n\r\nconst ProfileCard = ({\r\n  name,\r\n  description,\r\n  email,\r\n  githubUrl,\r\n}: ProfileCardProps) => {\r\n  const SM_IMAGE_SIZE = 160;\r\n  const IMAGE_PATH = \"../images/profile.png\";\r\n  const ICON_SIZE = 28;\r\n  return (\r\n    <figure className=\"flex flex-col sm:flex-row gap-2 sm:gap-8 p-2 w-full items-center\">\r\n      <StaticImage\r\n        className={`rounded-full flex ${styles.ProfileCardImage}`}\r\n        src={IMAGE_PATH}\r\n        alt=\"profile\"\r\n        aspectRatio={1}\r\n        width={SM_IMAGE_SIZE}\r\n        layout=\"fixed\"\r\n        placeholder=\"dominantColor\"\r\n      ></StaticImage>\r\n      <figcaption className=\"flex sm:flex-col gap-2 sm:gap-4 truncate \">\r\n        <h1 className=\"text-3xl font-bold\">{name}</h1>\r\n        <p className=\"break-all hidden sm:block\">{description}</p>\r\n        <a\r\n          href={`mailto:${email}`}\r\n          target=\"_blank\"\r\n          className=\"group flex gap-2 items-center\"\r\n        >\r\n          <EmailImage\r\n            className=\"fill-zinc-800 dark:fill-zinc-100 group-hover:fill-violet-700 dark:group-hover:fill-peach-500\"\r\n            width={ICON_SIZE}\r\n            height={ICON_SIZE}\r\n            fill=\"#000000\"\r\n          ></EmailImage>\r\n          <span className=\"group-hover:text-violet-700 dark:group-hover:text-peach-500 group-hover:underline underline-offset-2 hidden sm:block\">\r\n            {email}\r\n          </span>\r\n        </a>\r\n        <a\r\n          href={`${githubUrl}`}\r\n          target=\"_blank\"\r\n          className=\"group flex gap-2 items-center\"\r\n        >\r\n          <GitHubLogoImage\r\n            className=\"fill-zinc-800 dark:fill-zinc-100 group-hover:fill-violet-700 dark:group-hover:fill-peach-500\"\r\n            width={ICON_SIZE}\r\n            height={ICON_SIZE}\r\n            fill=\"#000000\"\r\n          ></GitHubLogoImage>\r\n          <span className=\"group-hover:text-violet-700 dark:group-hover:text-peach-500 group-hover:underline underline-offset-2 hidden sm:block\">\r\n            {githubUrl}\r\n          </span>\r\n        </a>\r\n      </figcaption>\r\n    </figure>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;\r\n","import * as React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\nimport Layout from \"../../components/Layout\";\r\nimport useTailwindCssDarkMode from \"../../hooks/useTailwindCssDarkMode\";\r\nimport { BODY_BACKGROUND_CLASSES } from \"../../constants\";\r\nimport { MdxNode, Profile, Site } from \"../../models/graphql/types\";\r\nimport ProfileCard from \"../../components/ProfileCard\";\r\n\r\ninterface PostProps {\r\n  data: {\r\n    mdx: MdxNode;\r\n    site: Site;\r\n  };\r\n}\r\n\r\nconst Post = ({ data }: PostProps) => {\r\n  const darkModeState = useTailwindCssDarkMode(BODY_BACKGROUND_CLASSES);\r\n\r\n  const profile = data.site.siteMetadata.profile as Profile;\r\n  const mdx = data.mdx;\r\n\r\n  const image = getImage(data.mdx.frontmatter.hero_image);\r\n\r\n  const dateTime = mdx.frontmatter.datetime\r\n    .replace(\"AM\", \"오전\")\r\n    .replace(\"PM\", \"오후\");\r\n\r\n  return (\r\n    <Layout darkModeState={darkModeState}>\r\n      <main className=\"w-10/12 md:w-[768px]\">\r\n        <article className=\"flex flex-col\">\r\n          <p>{dateTime}</p>\r\n          <h1 className=\"text-4xl\">{mdx.frontmatter.title}</h1>\r\n          <hr className=\"w-full mt-4 mb-4\"></hr>\r\n          {image && (\r\n            <GatsbyImage image={image} alt={mdx.frontmatter.hero_image_alt} />\r\n          )}\r\n          <section className={`prose dark:prose-invert max-w-full mt-8 mb-8`}>\r\n            <MDXRenderer>{mdx.body ?? \"\"}</MDXRenderer>\r\n          </section>\r\n          <section className=\"mt-8 mb-8\">\r\n            <ProfileCard\r\n              name={profile.name}\r\n              description={profile.description}\r\n              email={profile.email}\r\n              githubUrl={profile.githubUrl}\r\n            ></ProfileCard>\r\n          </section>\r\n        </article>\r\n      </main>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query ($id: String) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        profile {\r\n          name\r\n          description\r\n          email\r\n          githubUrl\r\n        }\r\n      }\r\n    }\r\n    mdx(id: { eq: $id }) {\r\n      body\r\n      frontmatter {\r\n        title\r\n        datetime(formatString: \"YYYY-MM-DD, A hh:mm\")\r\n        hero_image_alt\r\n        hero_image {\r\n          childImageSharp {\r\n            gatsbyImageData(\r\n              placeholder: BLURRED\r\n              formats: [AUTO, WEBP]\r\n              quality: 100\r\n              layout: FULL_WIDTH\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Post;\r\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["MDXRenderer","require","module","exports","React","mdx","useMDXScope","scope","children","props","mdxScope","End","useMemo","fullScope","keys","Object","values","map","key","Function","fn","createElement","name","description","email","githubUrl","className","StaticImage","src","alt","aspectRatio","width","layout","placeholder","href","target","EmailImage","height","fill","GitHubLogoImage","data","darkModeState","useTailwindCssDarkMode","BODY_BACKGROUND_CLASSES","profile","site","siteMetadata","image","getImage","frontmatter","hero_image","dateTime","datetime","replace","Layout","title","GatsbyImage","hero_image_alt","body","ProfileCard","arrayLikeToArray","arr","Array","isArray","__esModule","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","Reflect","construct","bind","a","push","apply","instance","prototype","arguments","obj","value","defineProperty","enumerable","configurable","writable","sham","Proxy","Boolean","valueOf","call","e","iter","Symbol","iterator","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread"],"sourceRoot":""}